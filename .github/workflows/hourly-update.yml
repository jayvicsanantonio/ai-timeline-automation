name: Hourly AI Timeline Update

on:
  schedule:
    # Run every hour
    - cron: '0 * * * *'

  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run without creating PR (dry run)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      max_events:
        description: 'Maximum events to include (1-10)'
        required: false
        default: '3'
        type: string
      significance_threshold:
        description: 'Minimum significance score (0-10)'
        required: false
        default: '7.0'
        type: string

env:
  NODE_VERSION: '18'
  TIMEZONE: 'UTC'

jobs:
  update-timeline:
    name: Update AI Timeline
    runs-on: ubuntu-latest
    timeout-minutes: 30

    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GIT_TOKEN }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          npm ci
          npm run build

      - name: 🔍 Validate environment
        run: |
          echo "Validating required secrets..."
          node -e "
            const required = ['OPENAI_API_KEY', 'GIT_TOKEN', 'TIMELINE_REPO'];
            const missing = required.filter(key => !process.env[key]);
            if (missing.length > 0) {
              console.error('Missing required secrets:', missing.join(', '));
              process.exit(1);
            }
            console.log('✅ All required secrets are configured');
          "
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          TIMELINE_REPO: ${{ vars.TIMELINE_REPO }}

      - name: 🤖 Run AI Timeline Update
        id: timeline_update
        run: npm run update
        env:
          # Required secrets
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

          # Configuration
          TIMELINE_REPO: ${{ vars.TIMELINE_REPO }}
          MAX_EVENTS_PER_WEEK: ${{ github.event.inputs.max_events || '3' }}
          SIGNIFICANCE_THRESHOLD: ${{ github.event.inputs.significance_threshold || '7.0' }}
          DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}

          # Optional configuration
          NEWS_SOURCES: ${{ vars.NEWS_SOURCES || 'hackernews,arxiv,rss' }}
          LOG_LEVEL: ${{ vars.LOG_LEVEL || 'info' }}

          # API Keys for news sources (optional)
          HACKERNEWS_API_KEY: ${{ secrets.HACKERNEWS_API_KEY }}
          ARXIV_API_KEY: ${{ secrets.ARXIV_API_KEY }}

      - name: 📊 Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: execution-logs-${{ github.run_number }}
          path: |
            logs/
            *.log
          retention-days: 30

      - name: 💬 Post summary to issue
        if: success() && vars.SUMMARY_ISSUE_NUMBER
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summaryPath = 'execution-summary.json';

            if (fs.existsSync(summaryPath)) {
              const summary = JSON.parse(fs.readFileSync(summaryPath, 'utf8'));
              
              const comment = `## 🤖 Daily AI Timeline Update - Run #${context.runNumber}
              
              ### 📊 Summary
              - **Events Collected**: ${summary.metrics.totalCollected}
              - **After Deduplication**: ${summary.metrics.afterDeduplication}
              - **Events Analyzed**: ${summary.metrics.analyzed}
              - **Events Selected**: ${summary.metrics.selected}
              - **Execution Time**: ${summary.metrics.duration}s
              
              ${summary.prUrl ? `### 🔗 Pull Request\n${summary.prUrl}` : '### ⚠️ No PR created (no significant events)'}
              
              ${summary.errors.length > 0 ? `### ⚠️ Errors\n${summary.errors.map(e => `- ${e}`).join('\n')}` : ''}
              
              [View Full Logs](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
              `;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: parseInt(process.env.SUMMARY_ISSUE_NUMBER),
                body: comment
              });
            }
        env:
          SUMMARY_ISSUE_NUMBER: ${{ vars.SUMMARY_ISSUE_NUMBER }}

      - name: 🚨 Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `AI Timeline Update Failed - Run #${context.runNumber}`;
            const body = `The daily AI timeline update has failed.

            **Run ID**: ${context.runId}
            **Triggered by**: ${context.eventName}
            **Actor**: ${context.actor}

            [View Logs](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})

            Please investigate and resolve the issue.`;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'automation-failure']
            });

  # Optional: Run tests before the main job
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm test

      - name: 📊 Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7
